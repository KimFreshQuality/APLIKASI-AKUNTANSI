<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Aplikasi Akuntansi Sederhana</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        .transaction-type-debit {
            border-left: 4px solid #10B981;
        }
        .transaction-type-credit {
            border-left: 4px solid #EF4444;
        }
        .print-only {
            display: none;
        }
        @media print {
            .no-print {
                display: none;
            }
            .print-only {
                display: block;
            }
            body {
                padding: 20px;
                font-size: 12px;
            }
        }
    </style>
</head>
<body class="bg-gray-50 min-h-screen">
    <div class="container mx-auto px-4 py-8">
        <!-- Header -->
        <header class="mb-8">
            <div class="flex justify-between items-center">
                <div>
                    <h1 class="text-3xl font-bold text-gray-800">Aplikasi Akuntansi</h1>
                    <p class="text-gray-600">Catatan keuangan sederhana</p>
                </div>
                <div class="flex items-center space-x-4">
                    <img src="https://storage.googleapis.com/workspace-0f70711f-8b4e-4d94-86f1-2a93ccde5887/image/e76b6049-4a27-4cb9-9c0d-29c2ab10c250.png" alt="Logo perusahaan berupa ikon buku besar berwarna biru dengan garis-garis akuntansi" class="w-12 h-12 rounded-full" />
                </div>
            </div>
        </header>

        <!-- Main Content -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <!-- Input Form -->
            <div class="lg:col-span-1 bg-white rounded-lg shadow p-6 no-print">
                <h2 class="text-xl font-semibold mb-4 text-gray-800">Tambah Transaksi</h2>
                <form id="transactionForm" class="space-y-4">
                    <div>
                        <label for="date" class="block text-sm font-medium text-gray-700">Tanggal</label>
                        <input type="date" id="date" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500" required>
                    </div>
                    
                    <div>
                        <label for="description" class="block text-sm font-medium text-gray-700">Keterangan</label>
                        <input type="text" id="description" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500" required>
                    </div>
                    
                    <div>
                        <label for="account" class="block text-sm font-medium text-gray-700">Akun</label>
                        <select id="account" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500" required>
                            <option value="">Pilih Akun</option>
                            <option value="Kas">Kas</option>
                            <option value="Piutang">Piutang</option>
                            <option value="Persediaan">Persediaan</option>
                            <option value="Peralatan">Peralatan</option>
                            <option value="Utang">Utang</option>
                            <option value="Modal">Modal</option>
                            <option value="Pendapatan">Pendapatan</option>
                            <option value="Beban">Beban</option>
                        </select>
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Jenis Transaksi</label>
                        <div class="mt-1 flex space-x-4">
                            <div class="flex items-center">
                                <input id="debit" name="type" type="radio" value="debit" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300" checked>
                                <label for="debit" class="ml-2 block text-sm text-gray-700">Debit</label>
                            </div>
                            <div class="flex items-center">
                                <input id="credit" name="type" type="radio" value="credit" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300">
                                <label for="credit" class="ml-2 block text-sm text-gray-700">Kredit</label>
                            </div>
                        </div>
                    </div>
                    
                    <div>
                        <label for="amount" class="block text-sm font-medium text-gray-700">Jumlah (Rp)</label>
                        <input type="number" id="amount" min="0" step="1000" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500" required>
                    </div>
                    
                    <button type="submit" class="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">
                        Simpan Transaksi
                    </button>
                </form>
            </div>

            <!-- Transaction List -->
            <div class="lg:col-span-2 space-y-6">
                <!-- Summary Cards -->
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div class="bg-white rounded-lg shadow p-4">
                        <h3 class="text-sm font-medium text-gray-500">Total Debit</h3>
                        <p id="totalDebit" class="text-2xl font-semibold text-green-600">Rp0</p>
                    </div>
                    <div class="bg-white rounded-lg shadow p-4">
                        <h3 class="text-sm font-medium text-gray-500">Total Kredit</h3>
                        <p id="totalCredit" class="text-2xl font-semibold text-red-600">Rp0</p>
                    </div>
                    <div class="bg-white rounded-lg shadow p-4">
                        <h3 class="text-sm font-medium text-gray-500">Saldo</h3>
                        <p id="balance" class="text-2xl font-semibold text-blue-600">Rp0</p>
                    </div>
                </div>

                <!-- Transaction Table -->
                <div class="bg-white rounded-lg shadow overflow-hidden">
                    <div class="px-6 py-4 border-b border-gray-200 flex justify-between items-center">
                        <h2 class="text-xl font-semibold text-gray-800">Daftar Transaksi</h2>
                        <button id="printBtn" class="no-print bg-gray-200 text-gray-700 py-1 px-3 rounded-md hover:bg-gray-300 text-sm">
                            Cetak Laporan
                        </button>
                    </div>
                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tanggal</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Keterangan</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Akun</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Debit</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Kredit</th>
                                    <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider no-print">Aksi</th>
                                </tr>
                            </thead>
                            <tbody id="transactionList" class="bg-white divide-y divide-gray-200">
                                <!-- Transactions will be loaded here -->
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Reports -->
                <div class="bg-white rounded-lg shadow overflow-hidden">
                    <div class="px-6 py-4 border-b border-gray-200">
                        <h2 class="text-xl font-semibold text-gray-800">Laporan Keuangan</h2>
                    </div>
                    <div class="p-6">
                        <div class="mb-8">
                            <h3 class="text-lg font-medium text-gray-800 mb-2">Neraca</h3>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <div class="border rounded-md p-4">
                                    <h4 class="font-medium text-gray-700 mb-2">Aktiva</h4>
                                    <div id="assetAccounts" class="space-y-1">
                                        <!-- Asset accounts will be loaded here -->
                                    </div>
                                    <div class="mt-2 pt-2 border-t border-gray-200 font-medium">
                                        Total Aktiva: <span id="totalAssets" class="text-green-600">Rp0</span>
                                    </div>
                                </div>
                                <div class="border rounded-md p-4">
                                    <h4 class="font-medium text-gray-700 mb-2">Pasiva</h4>
                                    <div id="liabilityEquityAccounts" class="space-y-1">
                                        <!-- Liability and equity accounts will be loaded here -->
                                    </div>
                                    <div class="mt-2 pt-2 border-t border-gray-200 font-medium">
                                        Total Pasiva: <span id="totalLiabilitiesEquity" class="text-green-600">Rp0</span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div>
                            <h3 class="text-lg font-medium text-gray-800 mb-2">Laporan Laba Rugi</h3>
                            <div class="border rounded-md p-4">
                                <div class="mb-4">
                                    <h4 class="font-medium text-gray-700 mb-2">Pendapatan</h4>
                                    <div id="incomeAccounts" class="space-y-1">
                                        <!-- Income accounts will be loaded here -->
                                    </div>
                                    <div class="mt-2 pt-2 border-t border-gray-200 font-medium">
                                        Total Pendapatan: <span id="totalIncome" class="text-green-600">Rp0</span>
                                    </div>
                                </div>
                                <div>
                                    <h4 class="font-medium text-gray-700 mb-2">Beban</h4>
                                    <div id="expenseAccounts" class="space-y-1">
                                        <!-- Expense accounts will be loaded here -->
                                    </div>
                                    <div class="mt-2 pt-2 border-t border-gray-200 font-medium">
                                        Total Beban: <span id="totalExpense" class="text-red-600">Rp0</span>
                                    </div>
                                </div>
                                <div class="mt-4 pt-4 border-t border-gray-200 font-medium text-lg">
                                    Laba/Rugi Bersih: <span id="netIncome" class="text-blue-600">Rp0</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Print Header -->
    <div id="printHeader" class="print-only p-4 border-b border-gray-200 mb-4">
        <div class="flex justify-between items-center">
            <div>
                <h1 class="text-2xl font-bold">Laporan Keuangan</h1>
                <p class="text-gray-600">Periode: <span id="printPeriod"></span></p>
            </div>
            <div>
                <p class="text-sm text-gray-500">Dicetak pada: <span id="printDate"></span></p>
            </div>
        </div>
    </div>

    <script>
        // Initialize the app when DOM is loaded
        document.addEventListener('DOMContentLoaded', function() {
            // Set default date to today
            document.getElementById('date').valueAsDate = new Date();
            
            // Load transactions from localStorage
            loadTransactions();
            
            // Setup form submission
            document.getElementById('transactionForm').addEventListener('submit', function(e) {
                e.preventDefault();
                addTransaction();
            });
            
            // Setup print button
            document.getElementById('printBtn').addEventListener('click', function() {
                window.print();
            });
        });
        
        // Function to add a new transaction
        function addTransaction() {
            const date = document.getElementById('date').value;
            const description = document.getElementById('description').value;
            const account = document.getElementById('account').value;
            const type = document.querySelector('input[name="type"]:checked').value;
            const amount = parseFloat(document.getElementById('amount').value);
            
            if (!date || !description || !account || !amount) {
                alert('Harap lengkapi semua field!');
                return;
            }
            
            const transaction = {
                id: Date.now(),
                date,
                description,
                account,
                type,
                amount
            };
            
            // Get existing transactions
            let transactions = JSON.parse(localStorage.getItem('transactions')) || [];
            
            // Add new transaction
            transactions.push(transaction);
            
            // Save to localStorage
            localStorage.setItem('transactions', JSON.stringify(transactions));
            
            // Reload transactions
            loadTransactions();
            
            // Reset form
            document.getElementById('transactionForm').reset();
            document.getElementById('date').valueAsDate = new Date();
            document.getElementById('debit').checked = true;
        }
        
        // Function to load all transactions
        function loadTransactions() {
            const transactions = JSON.parse(localStorage.getItem('transactions')) || [];
            const transactionList = document.getElementById('transactionList');
            
            // Clear existing transactions
            transactionList.innerHTML = '';
            
            // Calculate totals
            let totalDebit = 0;
            let totalCredit = 0;
            
            // Group transactions by account
            const accounts = {};
            
            // Sort transactions by date (newest first)
            transactions.sort((a, b) => new Date(b.date) - new Date(a.date));
            
            // Add each transaction to the list
            transactions.forEach(transaction => {
                const row = document.createElement('tr');
                row.className = transaction.type === 'debit' ? 'transaction-type-debit' : 'transaction-type-credit';
                
                // Format date
                const date = new Date(transaction.date);
                const formattedDate = date.toLocaleDateString('id-ID', {
                    day: '2-digit',
                    month: '2-digit',
                    year: 'numeric'
                });
                
                row.innerHTML = `
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${formattedDate}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">${transaction.description}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${transaction.account}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm ${transaction.type === 'debit' ? 'text-green-600 font-medium' : 'text-gray-500'}">
                        ${transaction.type === 'debit' ? 'Rp' + transaction.amount.toLocaleString('id-ID') : '-'}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm ${transaction.type === 'credit' ? 'text-red-600 font-medium' : 'text-gray-500'}">
                        ${transaction.type === 'credit' ? 'Rp' + transaction.amount.toLocaleString('id-ID') : '-'}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium no-print">
                        <button onclick="deleteTransaction(${transaction.id})" class="text-red-600 hover:text-red-900">Hapus</button>
                    </td>
                `;
                
                transactionList.appendChild(row);
                
                // Update totals
                if (transaction.type === 'debit') {
                    totalDebit += transaction.amount;
                } else {
                    totalCredit += transaction.amount;
                }
                
                // Update account balances
                if (!accounts[transaction.account]) {
                    accounts[transaction.account] = {
                        debit: 0,
                        credit: 0
                    };
                }
                
                if (transaction.type === 'debit') {
                    accounts[transaction.account].debit += transaction.amount;
                } else {
                    accounts[transaction.account].credit += transaction.amount;
                }
            });
            
            // Update summary
            document.getElementById('totalDebit').textContent = 'Rp' + totalDebit.toLocaleString('id-ID');
            document.getElementById('totalCredit').textContent = 'Rp' + totalCredit.toLocaleString('id-ID');
            document.getElementById('balance').textContent = 'Rp' + (totalDebit - totalCredit).toLocaleString('id-ID');
            
            // Generate financial reports
            generateReports(accounts);
            
            // Update print info
            updatePrintInfo();
        }
        
        // Function to generate financial reports
        function generateReports(accounts) {
            // Define account categories
            const assetAccounts = ['Kas', 'Piutang', 'Persediaan', 'Peralatan'];
            const liabilityAccounts = ['Utang'];
            const equityAccounts = ['Modal'];
            const incomeAccounts = ['Pendapatan'];
            const expenseAccounts = ['Beban'];
            
            // Initialize totals
            let totalAssets = 0;
            let totalLiabilities = 0;
            let totalEquity = 0;
            let totalIncome = 0;
            let totalExpense = 0;
            
            // Generate asset accounts list
            const assetList = document.getElementById('assetAccounts');
            assetList.innerHTML = '';
            assetAccounts.forEach(account => {
                if (accounts[account]) {
                    const balance = accounts[account].debit - accounts[account].credit;
                    totalAssets += balance;
                    
                    const item = document.createElement('div');
                    item.className = 'flex justify-between';
                    item.innerHTML = `
                        <span>${account}</span>
                        <span>Rp${balance.toLocaleString('id-ID')}</span>
                    `;
                    assetList.appendChild(item);
                }
            });
            
            // Generate liability and equity accounts list
            const liabilityEquityList = document.getElementById('liabilityEquityAccounts');
            liabilityEquityList.innerHTML = '';
            
            // Liabilities
            liabilityAccounts.forEach(account => {
                if (accounts[account]) {
                    const balance = accounts[account].credit - accounts[account].debit;
                    totalLiabilities += balance;
                    
                    const item = document.createElement('div');
                    item.className = 'flex justify-between';
                    item.innerHTML = `
                        <span>${account}</span>
                        <span>Rp${balance.toLocaleString('id-ID')}</span>
                    `;
                    liabilityEquityList.appendChild(item);
                }
            });
            
            // Equity
            equityAccounts.forEach(account => {
                if (accounts[account]) {
                    const balance = accounts[account].credit - accounts[account].debit;
                    totalEquity += balance;
                    
                    const item = document.createElement('div');
                    item.className = 'flex justify-between';
                    item.innerHTML = `
                        <span>${account}</span>
                        <span>Rp${balance.toLocaleString('id-ID')}</span>
                    `;
                    liabilityEquityList.appendChild(item);
                }
            });
            
            // Generate income accounts list
            const incomeList = document.getElementById('incomeAccounts');
            incomeList.innerHTML = '';
            incomeAccounts.forEach(account => {
                if (accounts[account]) {
                    const balance = accounts[account].credit - accounts[account].debit;
                    totalIncome += balance;
                    
                    const item = document.createElement('div');
                    item.className = 'flex justify-between';
                    item.innerHTML = `
                        <span>${account}</span>
                        <span>Rp${balance.toLocaleString('id-ID')}</span>
                    `;
                    incomeList.appendChild(item);
                }
            });
            
            // Generate expense accounts list
            const expenseList = document.getElementById('expenseAccounts');
            expenseList.innerHTML = '';
            expenseAccounts.forEach(account => {
                if (accounts[account]) {
                    const balance = accounts[account].debit - accounts[account].credit;
                    totalExpense += balance;
                    
                    const item = document.createElement('div');
                    item.className = 'flex justify-between';
                    item.innerHTML = `
                        <span>${account}</span>
                        <span>Rp${balance.toLocaleString('id-ID')}</span>
                    `;
                    expenseList.appendChild(item);
                }
            });
            
            // Update totals
            document.getElementById('totalAssets').textContent = 'Rp' + totalAssets.toLocaleString('id-ID');
            document.getElementById('totalLiabilitiesEquity').textContent = 'Rp' + (totalLiabilities + totalEquity).toLocaleString('id-ID');
            document.getElementById('totalIncome').textContent = 'Rp' + totalIncome.toLocaleString('id-ID');
            document.getElementById('totalExpense').textContent = 'Rp' + totalExpense.toLocaleString('id-ID');
            document.getElementById('netIncome').textContent = 'Rp' + (totalIncome - totalExpense).toLocaleString('id-ID');
        }
        
        // Function to delete a transaction
        function deleteTransaction(id) {
            if (confirm('Apakah Anda yakin ingin menghapus transaksi ini?')) {
                let transactions = JSON.parse(localStorage.getItem('transactions')) || [];
                transactions = transactions.filter(transaction => transaction.id !== id);
                localStorage.setItem('transactions', JSON.stringify(transactions));
                loadTransactions();
            }
        }
        
        // Function to update print information
        function updatePrintInfo() {
            const now = new Date();
            document.getElementById('printDate').textContent = now.toLocaleDateString('id-ID', {
                day: '2-digit',
                month: 'long',
                year: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
            });
            
            const transactions = JSON.parse(localStorage.getItem('transactions')) || [];
            if (transactions.length > 0) {
                const dates = transactions.map(t => new Date(t.date));
                const minDate = new Date(Math.min(...dates));
                const maxDate = new Date(Math.max(...dates));
                
                const formatOptions = { day: '2-digit', month: 'long', year: 'numeric' };
                const formattedMinDate = minDate.toLocaleDateString('id-ID', formatOptions);
                const formattedMaxDate = maxDate.toLocaleDateString('id-ID', formatOptions);
                
                document.getElementById('printPeriod').textContent = `${formattedMinDate} - ${formattedMaxDate}`;
            } else {
                document.getElementById('printPeriod').textContent = 'Tidak ada transaksi';
            }
        }
    </script>
</body>
</html>

